components:
  schemas:
    User:
      type: object
      required:
        - id
        - email
      properties:
        id:
          type: string
          description: Unique identifier for the user
        email:
          type: string
          format: email
          description: User's email address
        phoneNumber:
          type: string
          description: User's phone number
        isVerified:
          type: boolean
          description: Whether the user's email/phone is verified
        createdAt:
          type: string
          format: date-time
          description: Date when user was created
        updatedAt:
          type: string
          format: date-time
          description: Date when user was last updated
        lastActive:
          type: string
          format: date-time
          description: Last activity timestamp
        role:
          type: string
          enum: [USER, PREMIUM, MODERATOR, ADMIN]
          description: User's role
        status:
          type: string
          enum: [ACTIVE, INACTIVE, SUSPENDED, DELETED]
          description: User's status

    Profile:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the profile
        userId:
          type: string
          description: ID of the user this profile belongs to
        displayName:
          type: string
          description: User's display name
        bio:
          type: string
          description: User's bio or short description
        completionScore:
          type: number
          format: float
          description: Profile completion percentage
        lastUpdated:
          type: string
          format: date-time
          description: When profile was last updated
        isHidden:
          type: boolean
          description: Whether profile is hidden from search results
        profilePictureUrl:
          type: string
          description: URL to profile picture

    Match:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the match
        senderId:
          type: string
          description: ID of the user who initiated the match
        receiverId:
          type: string
          description: ID of the matched user
        status:
          type: string
          enum: [PENDING, ACCEPTED, REJECTED, EXPIRED]
          description: Status of the match
        createdAt:
          type: string
          format: date-time
          description: When match was created
        updatedAt:
          type: string
          format: date-time
          description: When match was last updated
        matchScore:
          type: number
          format: float
          description: Compatibility score between users
        matchNotes:
          type: string
          description: Optional notes about why matched
        chatRoomId:
          type: string
          description: ID of associated chat room if match is accepted

    ChatRoom:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the chat room
        createdAt:
          type: string
          format: date-time
          description: When chat room was created
        updatedAt:
          type: string
          format: date-time
          description: When chat room was last updated
        lastActivityAt:
          type: string
          format: date-time
          description: Timestamp of last activity in chat
        isActive:
          type: boolean
          description: Whether chat room is active

    Message:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the message
        chatRoomId:
          type: string
          description: ID of the chat room this message belongs to
        senderId:
          type: string
          description: ID of the user who sent the message
        content:
          type: string
          description: Message content
        messageType:
          type: string
          enum: [TEXT, IMAGE, VIDEO, DOCUMENT, LOCATION, AUDIO]
          description: Type of message
        sentAt:
          type: string
          format: date-time
          description: When message was sent
        updatedAt:
          type: string
          format: date-time
          description: When message was updated
        status:
          type: string
          enum: [SENT, DELIVERED, READ, FAILED]
          description: Message delivery status

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: string
          description: Error code

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
